/* У нас есть дерево, структурированное как вложенные списки ul/li.
Напишите код, который выведет каждый элемент списка <li>:
Какой в нём текст (без поддерева) ?
Какое число потомков – всех вложенных <li> (включая глубоко вложенные) ? */

// Пройдём циклом по всем элементам <li>:

for (let li of document.querySelectorAll('li')) {
  
}

// В цикле нам нужно получить текст в каждом элементе li. 
// Мы можем прочитать текстовое содержимое элемента списка из первого дочернего узла li, который будет текстовым узлом:

for (let li of document.querySelectorAll('li')) {
  let title = li.firstChild.data;

  // переменная title содержит текст элемента <li>
}
// Так мы сможем получить количество потомков как li.getElementsByTagName('li').length.






// Что выведет этот код?
<html>
  <body>
    <script>
      alert(document.body.lastChild.nodeType);
    </script>
  </body>
</html> 
/*
Здесь есть подвох.
Во время выполнения <script> последним DOM-узлом является <script>, 
потому что браузер ещё не обработал остальную часть страницы. */






// Что выведет этот код?
/*
<script>
  let body = document.body;

  body.innerHTML = "<!--" + body.tagName + "-->";

  alert( body.firstChild.data ); // что выведет?
</script> */

// Ответ: BODY.
/*
Происходящее по шагам:
Заменяем содержимое <body> на комментарий. Он будет иметь вид <!--BODY-->, т.к. body.tagName == "BODY". 
Как мы помним, свойство tagName в HTML всегда находится в верхнем регистре.
Этот комментарий теперь является первым и единственным потомком body.firstChild.
Значение свойства data для элемента-комментария – это его содержимое (внутри <!--...-->): "BODY". */





/*
Объектом какого класса является document?
Какое место он занимает в DOM-иерархии?
Наследует ли он от Node или от Element, или может от HTMLElement? */

// Объектом какого класса является document, можно выяснить так:
alert(document); // [object HTMLDocument]

// Или так:
alert(document.constructor.name); // HTMLDocument

// Итак, document – объект класса HTMLDocument.